# Promtail Configuration
# Log collection and forwarding configuration

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          __path__: /var/log/*log
    pipeline_stages:
      - match:
          selector: '{job="system"}'
          stages:
            - regex:
                expression: '^(?P<timestamp>\S+\s+\S+\s+\S+)\s+(?P<hostname>\S+)\s+(?P<service>\S+):\s+(?P<message>.*)$'
            - labels:
                service:
                hostname:
            - timestamp:
                source: timestamp
                format: 'Jan 02 15:04:05'

  # Docker container logs
  - job_name: docker
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker
          __path__: /var/lib/docker/containers/*/*log
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          expressions:
            tag:
          source: attrs
      - regex:
          expression: '^(?P<container_name>(?:[^|]*))'
          source: tag
      - timestamp:
          source: time
          format: RFC3339Nano
      - labels:
          stream:
          container_name:
      - output:
          source: output

  # Mall API logs
  - job_name: mall-api
    static_configs:
      - targets:
          - localhost
        labels:
          job: mall-api
          service: api
          __path__: /var/log/mall-api/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            level: level
            message: msg
            request_id: requestId
            user_id: userId
            method: method
            path: path
            status: status
            response_time: responseTime
      - labels:
          level:
          method:
          status:
          request_id:
          user_id:
      - timestamp:
          source: timestamp
          format: RFC3339
      - output:
          source: message

  # Nginx access logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          log_type: access
          __path__: /var/log/nginx/access.log
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>\S+)\s+\S+\s+(?P<remote_user>\S+)\s+\[(?P<time_local>[^\]]+)\]\s+"(?P<method>\S+)\s+(?P<path>\S+)\s+(?P<protocol>\S+)"\s+(?P<status>\d+)\s+(?P<body_bytes_sent>\d+)\s+"(?P<http_referer>[^"]*)"\s+"(?P<http_user_agent>[^"]*)".*$'
      - labels:
          method:
          status:
          remote_addr:
          path:
      - timestamp:
          source: time_local
          format: '02/Jan/2006:15:04:05 -0700'

  # Nginx error logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          log_type: error
          __path__: /var/log/nginx/error.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2}\s+\d{2}:\d{2}:\d{2})\s+\[(?P<level>\w+)\]\s+(?P<message>.*)$'
      - labels:
          level:
      - timestamp:
          source: timestamp
          format: '2006/01/02 15:04:05'

  # PostgreSQL logs
  - job_name: postgres
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgres
          service: database
          __path__: /var/log/postgresql/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}.\d+\s+\w+)\s+\[(?P<pid>\d+)\]\s+(?P<level>\w+):\s+(?P<message>.*)$'
      - labels:
          level:
          pid:
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000 MST'

  # Redis logs
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          service: cache
          __path__: /var/log/redis/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<pid>\d+):(?P<role>\w+)\s+(?P<timestamp>\d{2}\s+\w+\s+\d{2}:\d{2}:\d{2}.\d+)\s+(?P<level>\w+)\s+(?P<message>.*)$'
      - labels:
          level:
          role:
          pid:
      - timestamp:
          source: timestamp
          format: '02 Jan 15:04:05.000'

  # Application specific logs
  - job_name: mall-app-errors
    static_configs:
      - targets:
          - localhost
        labels:
          job: mall-app
          log_type: error
          __path__: /var/log/mall-app/error.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            error: error
            stack: stack
            request_id: requestId
            user_id: userId
      - labels:
          level:
          request_id:
          user_id:
      - timestamp:
          source: timestamp
          format: RFC3339

  # Performance logs
  - job_name: mall-performance
    static_configs:
      - targets:
          - localhost
        labels:
          job: mall-performance
          __path__: /var/log/mall-app/performance.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            endpoint: endpoint
            method: method
            response_time: responseTime
            status_code: statusCode
            user_id: userId
      - labels:
          endpoint:
          method:
          status_code:
          user_id:
      - timestamp:
          source: timestamp
          format: RFC3339